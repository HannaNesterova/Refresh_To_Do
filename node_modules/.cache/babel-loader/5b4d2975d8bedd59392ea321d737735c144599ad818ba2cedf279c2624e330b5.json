{"ast":null,"code":"import shortid from 'shortid';\nconst initialState = {\n  columns: []\n};\nconst ColumnsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'ADD_COLUMN':\n      return {\n        ...state,\n        columns: [...state.columns, {\n          ...action.payload,\n          id: shortid()\n        }]\n      };\n    default:\n      return state;\n  }\n};\n_c = ColumnsReducer;\nexport default ColumnsReducer;\nvar _c;\n$RefreshReg$(_c, \"ColumnsReducer\");","map":{"version":3,"names":["shortid","initialState","columns","ColumnsReducer","state","arguments","length","undefined","action","type","payload","id","_c","$RefreshReg$"],"sources":["/Users/qw/Desktop/APP/src/components/ColumnForm/ColumnReduser.js"],"sourcesContent":["import shortid from 'shortid';\n\nconst initialState = {\n    columns: []\n  };\n  \nconst ColumnsReducer = (state = initialState, action) => {\n    switch(action.type) {\n      case 'ADD_COLUMN':\n        return { ...state, columns: [...state.columns, { ...action.payload, id: shortid() }]};\n      default:\n        return state;\n    }\n  }\n  \n  export default ColumnsReducer;\n  "],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAE7B,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE;AACX,CAAC;AAEH,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,QAAOC,MAAM,CAACC,IAAI;IAChB,KAAK,YAAY;MACf,OAAO;QAAE,GAAGL,KAAK;QAAEF,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAO,EAAE;UAAE,GAAGM,MAAM,CAACE,OAAO;UAAEC,EAAE,EAAEX,OAAO;QAAG,CAAC;MAAC,CAAC;IACvF;MACE,OAAOI,KAAK;EAAC;AAEnB,CAAC;AAAAQ,EAAA,GAPGT,cAAc;AASlB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}